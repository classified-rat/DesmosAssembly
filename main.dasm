#define box_t 0,0,0,1,1,1,1,0
#define BOX_HEIGHT 2
#define BOX_WIDTH 1.5

push rx
jl 1, $start

:box
db $box_t
:boxend

:incry
push rx     ; save rx

ld rx 1     ; add 1 to ry
add
mov rx acc
push rx
pop ry

pop rx      ; restore rx
ret

:start
ld rx 0     ; initilize stack variables
push rx     ; x_offset = 0

ld ry $box  ; ld box pointer in to ry

:main       ; main code loop
mov rx ^ry  ; load x value in rx

push ry     ; save ry

mov ry [2]  ; load x_offset
add         ; add x_offset to x
mov rx acc  

ld ry $BOX_WIDTH
mult        ; y *= ry ; note: ry could come from any function of x_offset
mov rx acc

pop ry      ; restore ry from stack
ppush rx    ; push x to polygon stack

call $incry ; increment ry by 1
pop

:debug_main_y_half
mov rx ^ry  ; load y value in rx

push ry     ; save ry
ld ry $BOX_HEIGHT
mult        ; y *= ry ; note: ry could come from any function of x_offset
mov rx acc

pop ry      ; restore ry
ppush rx

call $incry ; increment ry by 1
pop

push ry
jl $boxend], $main
pop

:debug_main_x_offset_adjust
poly        ; put polygon on the polygon stack

pop rx      ; load x_offset into rx
ld ry 1     ; increment rx by 1
add
mov rx acc

push rx     ; update x_offset

ld ry $box

push rx
jl 3, $main
pop

:debug_main_restart
polypop     ; clear polygon stack
polypop
polypop

pop         ; clear stack
ld rx 0     ; jump back to start of program
push rx
jl 1, $start